# Задание 5 Самое длинное слово в файле. В данном задании вы должны
# написать программу, которая будет находить самое длинное слово в файле. В
# качестве результата программа должна выводить на экран длину самого
# длинного слова и все слова такой длины. Для простоты принимайте за
# значимые буквы любые непробельные символы, включая цифры и знаки препинания.
def checkLen(f):
    max_len = 0
    text = f.readline()
    while(text!=""):
        if (len(text)>max_len):
            max_len = len(text)
        text = f.readline()

    return max_len

def all_words(max_len):
    file = open('text12_5.txt', 'r')
    text = file.readline()
    while(text!=""):
        if (len(text) == max_len):
            print(text)
        text = file.readline()

def ex5():
    file = open('text12_5.txt', 'r')
    max_len = checkLen(file)
    print("Максимальная длина слова:", max_len)
    print('Слова максимальной длины:')
    all_words(max_len)


# Задание 8 Сумма чисел. Напишите программу, которая будет суммировать все числа,
# введенные пользователем, игнорируя при этом нечисловой ввод.
#
# Выводите на экран текущую сумму чисел после каждого очередного ввода.
#
# Ввод пользователем значения, не являющегося числовым, должен приводить к появлению соответствующего предупреждения,
# после чего пользователю должно быть предложено ввести следующее число.
# Выход из программы будет осуществляться путем пропуска ввода.
# Удостоверьтесь, что ваша программа корректно обрабатывает целочисленные значения и числа с плавающей запятой.
def ex8():
    s = a = 0
    while a != ' ':
        try:
            print('Введите число:')
            a = float(input())
            s+=a
            print('Сумма чисел: ', s)
        except:
            print('Ошибка ввода. Введите число:')
            try:
                a = input()
                if a == ' ':
                    exit()
                else:
                    float(a)
                print('Сумма чисел: ', s)
            except:
                exit(print('Ошибка ввода. Сумма чисел: ', s))


    #print('Сумма чисел: ', s)


# Задание 12 Странные слова. Ученикам, желающим запомнить правила написания слов в английском языке,
# часто напоминают следующее рифмованное одностишие: «I before E except after C» (I перед E, если не после
# C). Это правило позволяет запомнить, в какой последовательности писать
# буквы I и E, идущие в слове одна за другой, а именно: буква I должна
# предшествовать букве E, если непосредственно перед ними не стоит буква C.
# Если стоит – порядок гласных будет обратным.
# Примеры слов, на которые действует это правило: believe, chief, fierce, friend, ceiling и receipt.
# Но есть и исключения из этого правила, и одним из них является слово weird (странный).
# Напишите программу, которая будет построчно обрабатывать текстовый файл.
# В каждой строке может присутствовать много слов, а может
# и не быть ни одного. Слова, в которых буквы E и I не соседствуют друг с
# другом, обработке подвергать не следует. Если же такое соседство
# присутствует, необходимо проверить, соответствует ли написание
# анализируемого слова указанному выше правилу. Создайте и выведите на
# экран два списка. В первом должны располагаться слова, следующие правилу,
# а во втором – нарушающие его. При этом списки не должны содержать
# повторяющиеся слова. Также отобразите на экране длину каждого списка,
# чтобы пользователю было понятно, сколько слов в файле не отвечает правилу.

correct = []
uncorrect = []
def check_word(word):
    for i in range(len(word) - 2):
        if word[i + 1] == 'e' and word[i + 2] == 'i':
            if word[i] == 'c':
                correct.append(word)
            else:
                uncorrect.append(word)
        elif word[i+1] == 'i' and word[i + 2] == 'e':
            if word[i] != 'c':
                correct.append(word)
            else:
                uncorrect.append(word)


def ex12():
    file = open('words12.txt', 'r')
    text = []
    with file as f:
        for line in f:
            if (line!=''):
                text = line.split()
                for word in text:
                    if len(word) >= 3:
                        check_word(word)

    print("Правилу соответсвует", len(correct), ' слов : ', correct)
    print("Правилу не соответсвует", len(uncorrect), ' слов : ', uncorrect)


# ex5()
# ex8()
# ex12()






